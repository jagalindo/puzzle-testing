package fr.inria.diverse.refm.competition.common.utils.fitness;

import es.us.isa.FAMA.models.variabilityModel.VariabilityModel;
import fr.inria.diverse.graph.Arc;
import fr.inria.diverse.graph.Graph;
import fr.inria.diverse.graph.Vertex;

public class FitnessMetrics {

	public FitnessMetricsVO compute(VariabilityModel fm, Graph<Vertex, Arc> dependenciesGraph, String PCM) {
		FitnessMetricsVO metrics = new FitnessMetricsVO();
		int numberOfFMProducts = computeNumberOfProducts(fm);
		int numberOfPCMProducts = computeNumberOfProducts(PCM);
		
		// Computing precision
		int intersection = computeIntersectionPCMFM(fm, PCM);
		double precision = intersection / numberOfFMProducts;
		metrics.setPrecision(precision);
		
		// Computing recall
		double recall = intersection / numberOfPCMProducts;
		metrics.setPrecision(precision);
		
		// Computing safety
		double safety = 0;
		for (Arc arc : dependenciesGraph.getArcs()) {
			int productsRespectingDependency = getNumberOfRespectfulProducts(arc, fm);
			safety += (productsRespectingDependency/numberOfFMProducts);
		}
		metrics.setSafety(safety);
		return metrics;
	}

	private int computeNumberOfProducts(String pCM) {
		// TODO Auto-generated method stub
		return 0;
	}

	private int computeIntersectionPCMFM(VariabilityModel fm, String pCM) {
		// TODO Auto-generated method stub
		return 0;
	}

	private int computeNumberOfProducts(VariabilityModel fm) {
		// TODO Auto-generated method stub
		return 0;
	}

	private int getNumberOfRespectfulProducts(Arc arc, VariabilityModel fm) {
		// TODO Auto-generated method stub
		return 0;
	}

}
