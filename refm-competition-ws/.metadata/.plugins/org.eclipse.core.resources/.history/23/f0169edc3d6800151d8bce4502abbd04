package fr.inria.diverse.refm.competition.assumcao;

import java.io.File;
import java.io.IOException;

import es.us.isa.FAMA.models.FAMAfeatureModel.FAMAFeatureModel;
import es.us.isa.FAMA.models.FAMAfeatureModel.fileformats.SPLXWriter;
import fr.inria.diverse.graph.Arc;
import fr.inria.diverse.graph.Graph;
import fr.inria.diverse.graph.Vertex;
import fr.inria.diverse.refm.competition.common.utils.FileUtils;
import fr.inria.diverse.refm.competition.common.utils.PCMFormatTranslator;

public class AssumcaoREFM {

	public FAMAFeatureModel execute(Graph<Vertex, Arc> dependenciesGraph, String PCMFile) throws IOException, InterruptedException {
		
		// The approach receives a SPLOT model with the dependencies graph and in initial solution to the problem.
		// In this step, we build such input and store it in an xml file. 
		FAMAFeatureModel dependenciesGraphFm = new FAMAFeatureModel();
		
		SPLXWriter splotWritter = new SPLXWriter();
//		splotWritter.writeFile(fileName, vm);
		
		
		String originalPCM = FileUtils.readFileContent(new File(PCMFile));
		PCMFormatTranslator translator = new PCMFormatTranslator();
		translator.loadPCM(originalPCM);
		String adaptedPCM = translator.fromPuzzleToLopezFormat(originalPCM);
		String PCMName = PCMFile.substring(PCMFile.lastIndexOf("/"), PCMFile.length()).replace(".txt", "");
		String formatedFilePath = "new_models/" + PCMName + ".prods";
		FileUtils.saveFile(adaptedPCM, formatedFilePath);
		
		String[] args = new String[2];
		args[0] = PCMName;
		args[0] = "argouml";
		run.RunNSGAIIFM_3obj.main(args);
		
		// load the result from the output file
		FAMAFeatureModel result = null;

		return result;
	}
}
