package fr.inria.diverse.refm.competition.common.utils;

import es.us.isa.FAMA.models.variabilityModel.VariabilityModel;
import fr.inria.diverse.graph.Arc;
import fr.inria.diverse.graph.Graph;
import fr.inria.diverse.graph.Vertex;
import fr.inria.diverse.refm.competition.common.utils.fitness.FitnessMetrics;
import fr.inria.diverse.refm.competition.common.utils.fitness.FitnessMetricsVO;
import fr.inria.diverse.refm.competition.common.utils.fitness.TopologyMetrics;

/**
 * Utility for printing the fitness functions of a given feature model.
 * 
 * @author David Mendez-Acuna
 *
 */
public class PrintUtils {

	// -------------------------------------------------
	// Attributes
	// -------------------------------------------------
	
	// -------------------------------------------------
	// Constructor
	// -------------------------------------------------
	
	public PrintUtils(){
	}
	
	// -------------------------------------------------
	// Methods
	// -------------------------------------------------
	
	/**
	 * Prints the value of all the registered fitness functions on the given feature model.
	 * @param fm
	 */
	public void printFitness(VariabilityModel fm, Graph<Vertex, Arc> dependenciesGraph, String PCM) {
		System.out.println("***");
		System.out.println("******");
		System.out.println("Printing the evaluation metrics for the resulting feature model");
		FitnessMetrics metrics = FitnessMetrics.getInstance();
		FitnessMetricsVO vo = metrics.compute(fm, dependenciesGraph, PCM);
		System.out.println(" - Precision: " + vo.getPrecision());
		System.out.println(" - Recall: " + vo.getPrecision());
		System.out.println(" - Safety: " + vo.getPrecision());
	}
	
	public void printTopologyMetrics(VariabilityModel fm){
		TopologyMetrics tp = new TopologyMetrics();
		tp.computeTopologyMetrics(fm);
	}
}
